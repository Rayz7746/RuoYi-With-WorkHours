<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.WorkAssignmentMapper">
    
    <resultMap type="WorkAssignment" id="WorkAssignmentResult">
        <result property="assignmentId"    column="assignment_id"    />
        <result property="projectId"    column="project_id"    />
        <result property="userId"    column="user_id"    />
        <result property="role"    column="role"    />
        <result property="isActiveAssignment"    column="is_active_assignment"    />
        <result property="dateStart"    column="date_start"    />
        <result property="dateEnd"    column="date_end"    />
        <result property="createAt"    column="create_at"    />
        <result property="updateAt"    column="update_at"    />
        <association property="project" javaType="WorkProject" resultMap="projectResult"/>
        <association property="user" javaType="SysUser" resultMap="userResult"/>
    </resultMap>

    <resultMap type="WorkProject" id="projectResult">
        <result property="projectId"    column="project_id"    />
        <result property="name"    column="name"    />
        <result property="customerId"    column="customer_id"    />
    </resultMap>

    <resultMap type="SysUser" id="userResult">
        <id     property="userId"        column="user_id"         />
        <result property="userName"      column="user_name"       />
        <result property="nickName"      column="nick_name"       />
        <result property="status"        column="status"          />
    </resultMap>

    <sql id="selectWorkAssignmentVo">
        select a.assignment_id, a.project_id, a.user_id, a.role, a.is_active_assignment, a.date_start, a.date_end, a.create_at, a.update_at
        , p.project_id, p.name, p.customer_id
        , u.user_id, u.user_name, u.nick_name, u.status
        from work_assignment a
            inner join work_project p on a.project_id = p.project_id and p.is_active = 1
            left join sys_user u on a.user_id = u.user_id
    </sql>

    <select id="selectWorkAssignmentList" parameterType="WorkAssignment" resultMap="WorkAssignmentResult">
        <include refid="selectWorkAssignmentVo"/>
        <where>
            <if test="projectId != null"> AND a.project_id = #{projectId}</if>
            <if test="userId != null"> AND a.user_id = #{userId}</if>
            <if test="role != null and role != ''"> AND a.role = #{role}</if>
            <if test="isActiveAssignment != null"> AND a.is_active_assignment = #{isActiveAssignment}</if>
            <if test="dateStart != null"> AND a.date_start = #{dateStart}</if>
            <if test="dateEnd != null"> AND a.date_end = #{dateEnd}</if>
            <if test="createAt != null"> AND a.create_at = #{createAt}</if>
            <if test="updateAt != null"> AND a.update_at = #{updateAt}</if>
        </where>
    </select>

    <select id="selectWorkAssignmentByAssignmentId" parameterType="Long" resultMap="WorkAssignmentResult">
        <include refid="selectWorkAssignmentVo"/>
        WHERE a.assignment_id = #{assignmentId}
    </select>

    <insert id="insertWorkAssignment" parameterType="WorkAssignment" useGeneratedKeys="true" keyProperty="assignmentId">
        insert into work_assignment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectId != null">project_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="role != null">role,</if>
            <if test="isActiveAssignment != null">is_active_assignment,</if>
            <if test="dateStart != null">date_start,</if>
            <if test="dateEnd != null">date_end,</if>
            <if test="createAt != null">create_at,</if>
            <if test="updateAt != null">update_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectId != null">#{projectId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="role != null">#{role},</if>
            <if test="isActiveAssignment != null">#{isActiveAssignment},</if>
            <if test="dateStart != null">#{dateStart},</if>
            <if test="dateEnd != null">#{dateEnd},</if>
            <if test="createAt != null">#{createAt},</if>
            <if test="updateAt != null">#{updateAt},</if>
         </trim>
    </insert>

    <update id="updateWorkAssignment" parameterType="WorkAssignment">
        update work_assignment
        <trim prefix="SET" suffixOverrides=",">
            project_id = #{projectId},
            user_id = #{userId},
            role = #{role},
            is_active_assignment = #{isActiveAssignment},
            date_start = #{dateStart},
            date_end = #{dateEnd},
            create_at = #{createAt},
            update_at = #{updateAt},
        </trim>
        where assignment_id = #{assignmentId}
    </update>

    <delete id="deleteWorkAssignmentByAssignmentId" parameterType="Long">
        delete from work_assignment where assignment_id = #{assignmentId}
    </delete>

    <delete id="deleteWorkAssignmentByAssignmentIds" parameterType="String">
        delete from work_assignment where assignment_id in 
        <foreach item="assignmentId" collection="array" open="(" separator="," close=")">
            #{assignmentId}
        </foreach>
    </delete>
</mapper>