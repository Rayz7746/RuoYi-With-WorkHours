<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.WorkCustomerMapper">
    
    <resultMap type="WorkCustomer" id="WorkCustomerResult">
        <result property="customerId"    column="customer_id"    />
        <result property="name"    column="name"    />
        <result property="code"    column="code"    />
        <result property="description"    column="description"    />
        <result property="isActive"    column="is_active"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectWorkCustomerVo">
        select customer_id, name, code, description, is_active, created_at, updated_at from work_customer
    </sql>

    <select id="selectWorkCustomerList" parameterType="WorkCustomer" resultMap="WorkCustomerResult">
        <include refid="selectWorkCustomerVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="code != null  and code != ''"> and code = #{code}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="isActive != null "> and is_active = #{isActive}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectWorkCustomerByCustomerId" parameterType="Long" resultMap="WorkCustomerResult">
        <include refid="selectWorkCustomerVo"/>
        where customer_id = #{customerId}
    </select>

    <insert id="insertWorkCustomer" parameterType="WorkCustomer" useGeneratedKeys="true" keyProperty="customerId">
        insert into work_customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="code != null and code != ''">code,</if>
            <if test="description != null">description,</if>
            <if test="isActive != null">is_active,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="code != null and code != ''">#{code},</if>
            <if test="description != null">#{description},</if>
            <if test="isActive != null">#{isActive},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateWorkCustomer" parameterType="WorkCustomer">
        update work_customer
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="code != null and code != ''">code = #{code},</if>
            <if test="description != null">description = #{description},</if>
            <if test="isActive != null">is_active = #{isActive},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where customer_id = #{customerId}
    </update>

    <delete id="deleteWorkCustomerByCustomerId" parameterType="Long">
        delete from work_customer where customer_id = #{customerId}
    </delete>

    <delete id="deleteWorkCustomerByCustomerIds" parameterType="String">
        delete from work_customer where customer_id in 
        <foreach item="customerId" collection="array" open="(" separator="," close=")">
            #{customerId}
        </foreach>
    </delete>
</mapper>